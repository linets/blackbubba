{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.


  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
  %}
{% endcomment %}
{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id
-%}

{% assign counter = 0 %}
{%- for value in option.values -%}
  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor
  -%}

  {% if variant_type == 'color' %}
    {% for variant in product.variants %}
      {% if variant.title contains value %}
        {% assign variant_color_id = variant.metafields.custom.color %}
        {% continue %}
      {% endif %}
    {% endfor %}

    <input
      onclick="validateVariantSelection(this)"
      type="radio"
      id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      name="{{ option.name }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if option.selected_value == value %}
        checked
      {% endif %}
      {% if option_disabled %}
        class="disabled"
      {% endif %}
    >

    {% comment %}
      {% assign variant_color_id = product.variants[counter].metafields.custom.color %}
    {% endcomment %}

    <label
      {% if variant_color_id != blank %}
        style="background-color:{{ variant_color_id }};"
      {% endif %}
      class="{{ value | downcase }} {% if variant_color_id != blank %}color-type{% endif %}"
      data-variantId="{{ product.variants[counter].id }}"
      data-color="{{ value }}"
      for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
    >
      {% if variant_color_id == blank %}{{ value -}}{% endif %}
      <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
    </label>

    {% assign counter = counter | plus: 1 %}
  {%- elsif block.settings.picker_type == 'button' -%}
    <input
      onclick="validateVariantSelection(this)"
      type="radio"
      id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      name="{{ option.name }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if option.selected_value == value %}
        checked
      {% endif %}
      {% if option_disabled %}
        class="disabled"
      {% endif %}
    >
    <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
      {{ value -}}
      <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
    </label>
  {%- elsif block.settings.picker_type == 'dropdown' -%}
    <option
      value="{{ value | escape }}"
      {% if option.selected_value == value %}
        selected="selected"
      {% endif %}
    >
      {% if option_disabled -%}
        {{- 'products.product.value_unavailable' | t: option_value: value -}}
      {%- else -%}
        {{- value -}}
      {%- endif %}
    </option>
  {%- endif -%}
{%- endfor -%}

<script>
  window.addEventListener('load', (event) => {
    checkAllColorDisabled();
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    let variant_id = urlParams.get('variant');

    if (variant_id) {
      let inputs = document.querySelectorAll('.product-form__input label');
      [].forEach.call(inputs, function (input) {
        input.classList.remove('active');
        if (variant_id == input.dataset.variantid) {
          input.classList.add('active');
        }
      });
    }
    validateScrollArowDown();
  });
  function validateScrollArowDown() {
    setTimeout(() => {
      let sliderThumbanil = document.querySelectorAll('.thumbnail-list.slider li');
      let counterThumbanil = 0;
      sliderThumbanil.forEach((e) => {
        if (e.style.display != 'none') {
          counterThumbanil++;
        }
      });
      if (counterThumbanil > 5) {
        document.querySelector('.arrow-down-scroll').style.visibility = 'visible';
        document.querySelector('.arrow-top-scroll').style.visibility = 'visible';
        document.querySelector('.thumbnail-list.slider').classList.add('list-active');
      } else {
        document.querySelector('.arrow-down-scroll').style.visibility = 'hidden';
        document.querySelector('.arrow-top-scroll').style.visibility = 'hidden';
        document.querySelector('.thumbnail-list.slider').classList.remove('list-active');
      }
    }, '200');
  }

  function checkAllColorDisabled() {
    document.querySelectorAll('.product-form__input input[name="Color"]').forEach((e) => {
      if (e.classList.contains('disabled')) {
        e.nextElementSibling.classList.add('disabled');
      }
    });
  }
  function checkDisabled(e) {
    if (document.querySelector('.product-form__input input[name="Tamaño"]')) {
      document.querySelectorAll('.product-form__input input[name="Color"]').forEach((x) => {
        x.nextElementSibling.classList.remove('disabled');
      });
      let ele = document.querySelector('.product-form__input input[name="Tamaño"]:checked');
      if (ele.classList.contains('disabled')) {
        document
          .querySelector('.product-form__input input[name="Color"]:checked')
          .nextElementSibling.classList.add('disabled');
      }
    } else {
      let ele = document.querySelector('.product-form__input input[name="Color"]:checked');
      if (ele.classList.contains('disabled')) {
        ele.nextElementSibling.classList.add('disabled');
      }
    }

    checkAllColorDisabled();
  }
  function validateVariantSelection(e) {
    setTimeout(() => {
      checkDisabled(e);
    }, 2000);
    setTimeout(() => {
      checkDisabled(e);
      //// Thumbnails Change
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      let variant_id = urlParams.get('variant');

      if (variant_id) {
        let sliderThumbanil = document.querySelectorAll('.thumbnail-list.slider li');
        let x = 0;
        let y = 0;
        sliderThumbanil.forEach((e) => {
          if (x != 0) {
            if (e.dataset.variantid == variant_id) {
              e.style.display = 'block';
              y++;
            } else {
              e.style.display = 'none';
            }
          }
          x++;
        });

        if (y == 0) {
          sliderThumbanil.forEach((e) => {
            if (!e.dataset.variantid) {
              e.style.display = 'block';
            }
          });
        }
      }
      //// Thumbnails Change
    }, '100');

    let inputs = document.querySelectorAll('.product-form__input label');
    [].forEach.call(inputs, function (input) {
      input.classList.remove('active');
    });

    let form__label = document.querySelectorAll('.form__label');
    [].forEach.call(form__label, function (label) {
      if (label.innerText.includes(e.name)) {
        let value = label.innerText.split(' ')[0] + ' ' + e.value;
        label.innerText = value;
      }
    });

    setTimeout(() => {
      e.nextSibling.nextSibling.classList.add('active');
    }, '100');

    validateScrollArowDown();

    let btnSwiper = document.querySelectorAll('.thumbnail-slider .slider-button');
    btnSwiper.forEach((e) => {
      setTimeout(() => {
        e.disabled = false;
      }, '500');
    });
  }
</script>
